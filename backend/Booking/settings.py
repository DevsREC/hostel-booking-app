"""
Django settings for Booking project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from decouple import config
from django.urls import reverse_lazy

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')
JWT_KEY = config('JWT_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG", False)

ALLOWED_HOSTS = ['*']
CSRF_TRUSTED_ORIGINS = ['http://*.127.0.0.1','http://localhost']

# Application definition

INSTALLED_APPS = [
    # 'django_daisy',
    # 'django.contrib.humanize',
    'unfold',
    "unfold.contrib.import_export",
    "unfold.contrib.filters",
    "unfold.contrib.inlines",
    "unfold.contrib.forms",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework_swagger',
    'rest_framework',
    'import_export',
    'corsheaders',
    'authentication',
    'hostel',
    'admin_honeypot',
    'column_toggle',
    'django_crontab',
]

# X_FRAME_OPTIONS = "SAMEORIGIN"
# SILENCED_SYSTEM_CHECKS = ["security.W019"]

INTERNAL_IPS = [
    "127.0.0.1",
]

AUTH_USER_MODEL = 'authentication.User'


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Booking.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
       'rest_framework.authentication.TokenAuthentication',
       'rest_framework.authentication.SessionAuthentication',
   ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    )
}

WSGI_APPLICATION = 'Booking.wsgi.application'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# Dev
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Production
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': config('DB_NAME'),
#         'USER': config('DB_USER'),
#         'PASSWORD': config('DB_PASSWORD'),
#         'HOST': config('DB_HOST'),
#         'PORT': '5432',
#     }
# }



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


STATIC_URL = '/static/'
if DEBUG:
    STATICFILES_DIRS=[os.path.join(BASE_DIR, "static"),]
else:
    STATIC_ROOT = BASE_DIR / 'staticfiles'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

CORS_ORIGIN_ALLOW_ALL = True

COOKIE_DOMAIN = config('COOKIE_DOMAIN')


# CORS_ALLOWED_ORIGINS = [
#   "http://localhost:3000",  
# ]

CORS_ALLOW_CREDENTIALS = True

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.zeptomail.in'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')

CRONJOBS = [
    ('*/10 * * * *', 'hostel.cron.cancel_expired_bookings'),
    ('0 0 * * *', 'hostel.cron.mark_expired_payment'),
]

CRONTAB_COMMAND_PREFIX = str(BASE_DIR)
CRONTAB_DJANGO_SETTINGS_MODULE = 'Booking.settings'

DAISY_SETTINGS = {
    'SITE_TITLE': 'Hostel Booking Admin',  # The title of the site 
    'SITE_HEADER': 'Administration',  # Header text displayed in the admin panel
    'INDEX_TITLE': 'Hi, welcome to your dashboard',  # The title for the index page of dashboard
    'SITE_LOGO': '/static/admin/img/daisyui-logomark.svg',  # Path to the logo image displayed in the sidebar
    'EXTRA_STYLES': [],  # List of extra stylesheets to be loaded in base.html (optional)
    'EXTRA_SCRIPTS': [],  # List of extra script URLs to be loaded in base.html (optional)
    'LOAD_FULL_STYLES': False,  # If True, loads full DaisyUI components in the admin (useful if you have custom template overrides)
    'SHOW_CHANGELIST_FILTER': True,  # If True, the filter sidebar will open by default on changelist views
    'DONT_SUPPORT_ME': True, # Hide github link in sidebar footer
    'SIDEBAR_FOOTNOTE': '', # add footnote to sidebar
    'APPS_REORDER': {
        # Custom configurations for third-party apps that can't be modified directly in their `apps.py`
        'auth': {
            'icon': 'fa-solid fa-person-military-pointing',  # FontAwesome icon for the 'auth' app
            'name': 'Authentication',  # Custom name for the 'auth' app
            'hide': False,  # Whether to hide the 'auth' app from the sidebar (set to True to hide)
            'divider_title': "Auth",  # Divider title for the 'auth' section
        },
        'social_django': {
            'icon': 'fa-solid fa-users-gear',  # Custom FontAwesome icon for the 'social_django' app
        },
    },
}

UNFOLD = {
    "SHOW_VIEW_ON_SITE": False,
    "SIDEBAR": {
        "show_search": True,
        "show_all_applications": False,
        "navigation": [
                        {
                "title": "Honeypot",
                "seperator": True,
                "collapsible": True,
                "icon": "hive",
                "items": [
                    {
                        "title": "Login Attempts",
                        "icon": "warning",
                        "link": reverse_lazy("admin:admin_honeypot_loginattempt_changelist"),
                    },
                ]
            },
            {
                "title": "Users And Groups",
                "seperator": True,
                "collapsible": True,
                "icon": "users",
                "items": [
                    {
                        "title": "Groups",
                        "icon": "groups",
                        "link": reverse_lazy("admin:auth_group_changelist"),
                    },
                    {
                        "title": "Debarred",
                        "icon": "block",
                        "link": reverse_lazy("admin:authentication_blockedstudents_changelist")
                    },
                    {
                        "title": "Users",
                        "icon": "dashboard",
                        "link": reverse_lazy("admin:authentication_user_changelist"),
                    },
                    {
                        "title": "Forgot Password",
                        "icon": "password",
                        "link": reverse_lazy("admin:authentication_forgetpassword_changelist"),
                    },
                ]
            },
            {
                "title": "Hostel",
                "seperator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": "Hostel",
                        "icon": "apartment",
                        "link": reverse_lazy("admin:hostel_hostel_changelist"),
                    },
                    {
                        "title": "Booking Stats",
                        "icon": "query_stats",
                        "link": reverse_lazy("admin:hostel_roomstats_changelist"),
                    },
                    {
                        "title": "Pending",
                        "icon": "pending",
                        "link": reverse_lazy("admin:hostel_paymentmanagement_changelist"),
                    },
                    {
                       "title": "All Bookings",
                       "icon": "quick_reference_all",
                       "link": reverse_lazy("admin:hostel_roombooking_changelist"),
                    },
                    {
                        "title": "Penalty",
                        "icon": "av_timer",
                        "link": reverse_lazy("admin:hostel_penalty_changelist"),
                    }
                ]
            }
        ]
    }
}

# FORCE_SCRIPT_NAME = '/api'